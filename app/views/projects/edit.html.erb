<div class="flex min-h-screen bg-base-200 py-8">
  <!-- Sticky Sidebar -->
  <div class="w-64 p-6 bg-base-100 shadow-xl rounded-r-2xl flex flex-col space-y-4 sticky top-6 h-fit self-start mt-6 ml-6">
    <%= link_to "← Back", master_cv_index_path, class: "px-4 py-3 bg-base-200 text-base-content font-medium rounded-lg hover:bg-base-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-base-300 transition text-center border border-base-300" %>
    <%= button_tag "💾 Save Projects", form: "projects-edit-form", class: "px-4 py-3 btn btn-primary rounded-lg transition shadow-lg" %>
  </div>

  <!-- Main Content -->
  <div class="flex-1 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="bg-base-100 shadow-xl rounded-lg overflow-hidden">
      <!-- Header -->
      <div class="bg-primary px-6 py-4">
        <h1 class="text-2xl font-bold text-primary-content">Edit Projects</h1>
        <p class="text-primary-content/80 mt-1">Manage your projects and accomplishments</p>
      </div>

      <%= form_with url: upsert_projects_path, method: :put, local: true, html: { id: "projects-edit-form", class: "p-6 space-y-6" } do |form| %>

        <!-- Projects Items Section -->
        <div class="space-y-4">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-base-content">Projects</h3>
          </div>

          <!-- Items Container -->
          <div id="projects-container" class="space-y-3">
            <% @projects.each_with_index do |project, index| %>
              <div class="project-row bg-base-100 border border-base-300 rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow duration-200" data-position="<%= index + 1 %>">
                <div class="flex items-center space-x-4 mb-3">
                  <!-- Drag Handle -->
                  <div class="drag-handle cursor-grab active:cursor-grabbing text-base-content/50 hover:text-base-content p-2 rounded-md hover:bg-base-200 transition-colors duration-200">
                    <i class="fas fa-grip-vertical text-lg"></i>
                  </div>

                  <!-- Position (hidden input) -->
                  <input type="hidden" name="projects[][position]" value="<%= index + 1 %>" class="position-input">
                  <input type="hidden" name="projects[][id]" value="<%= project.id %>" class="id-input">

                  <!-- Project Name -->
                  <div class="flex-1">
                    <label class="block text-xs font-medium text-base-content mb-1">Project Name</label>
                    <input type="text"
                           name="projects[][name]"
                           value="<%= project.name %>"
                           placeholder="E-commerce Platform"
                           class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                  </div>

                  <!-- Link -->
                  <div class="flex-1">
                    <label class="block text-xs font-medium text-base-content mb-1">Link</label>
                    <input type="text"
                           name="projects[][link]"
                           value="<%= project.link %>"
                           placeholder="https://github.com/username/project"
                           class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                  </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-3">
                  <!-- Start Date -->
                  <div>
                    <label class="block text-xs font-medium text-base-content mb-1">Start Date</label>
                    <input type="date"
                           name="projects[][start_date]"
                           value="<%= project.start_date %>"
                           class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                  </div>

                  <!-- End Date -->
                  <div>
                    <label class="block text-xs font-medium text-base-content mb-1">End Date</label>
                    <input type="date"
                           name="projects[][end_date]"
                           value="<%= project.end_date %>"
                           class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                  </div>

                  <!-- Link Title -->
                  <div>
                    <label class="block text-xs font-medium text-base-content mb-1">Link Title</label>
                    <input type="text"
                           name="projects[][link_title]"
                           value="<%= project.link_title %>"
                           placeholder="GitHub Repository"
                           class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                  </div>
                </div>

                <!-- Remove Button -->
                <div class="mb-3">
                  <button type="button"
                          class="remove-project-button w-full py-2 btn btn-error rounded-md transition-colors duration-200 flex items-center justify-center">
                    <i class="fas fa-trash mr-2"></i> Remove Project
                  </button>
                </div>

                <!-- Bullets Section -->
                <div class="mb-3">
                  <label class="block text-xs font-medium text-base-content mb-2">Project Details/Bullets</label>
                  <div class="space-y-2 bullets-container">
                    <% project.project_bullets.each_with_index do |bullet, bullet_index| %>
                      <div class="bullet-row flex items-center space-x-2" data-bullet-position="<%= bullet_index + 1 %>">
                        <div class="bullet-drag-handle cursor-grab active:cursor-grabbing text-base-content/50 hover:text-base-content p-1 rounded hover:bg-base-200">
                          <i class="fas fa-grip-horizontal text-sm"></i>
                        </div>
                        <input type="hidden" name="projects[][bullets][][position]" value="<%= bullet_index + 1 %>" class="bullet-position-input">
                        <input type="hidden" name="projects[][bullets][][id]" value="<%= bullet.id %>" class="bullet-id-input">
                        <input type="text"
                               name="projects[][bullets][][content]"
                               value="<%= bullet.content %>"
                               placeholder="Built responsive UI with React..."
                               class="flex-1 px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
                        <button type="button" class="remove-bullet-button text-error hover:text-error/80 p-2">
                          <i class="fas fa-times"></i>
                        </button>
                      </div>
                    <% end %>
                    <!-- Add Bullet Button -->
                    <button type="button" class="add-bullet-button text-primary hover:text-primary/80 text-sm font-medium flex items-center mt-2">
                      <i class="fas fa-plus mr-1"></i> Add Bullet Point
                    </button>
                  </div>
                </div>
              </div>
            <% end %>
          </div>

          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold text-base-content"></h3>
            <button type="button"
                    id="add-project-button"
                    class="inline-flex items-center px-4 py-2 btn btn-success rounded-lg transition-colors duration-200">
              <i class="fas fa-plus mr-2"></i>
              Add Project
            </button>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 pt-6 border-t border-base-300 justify-between">
          <%= link_to "Cancel", master_cv_index_path,
                      class: "flex-1 sm:flex-initial px-6 py-3 btn btn-error rounded-lg transition-colors duration-200 text-center" %>
          <%= submit_tag "Save Projects",
                         class: "flex-1 sm:flex-initial px-6 py-3 btn btn-success rounded-lg transition-colors duration-200 cursor-pointer" %>
        </div>

      <% end %>
    </div>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  const container = document.getElementById('projects-container');
  const addButton = document.getElementById('add-project-button');

  if (!container || !addButton) return;

  const ProjectsEdit = {
    addItem() {
      const currentItems = container.children.length;
      const newPosition = currentItems + 1;

      const newRow = document.createElement('div');
      newRow.className = 'project-row bg-base-100 border border-base-300 rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow duration-200';
      newRow.dataset.position = newPosition;
      newRow.innerHTML = `
        <div class="flex items-center space-x-4 mb-3">
          <div class="drag-handle cursor-grab active:cursor-grabbing text-base-content/50 hover:text-base-content p-2 rounded-md hover:bg-base-200 transition-colors duration-200">
            <i class="fas fa-grip-vertical text-lg"></i>
          </div>
          <input type="hidden" name="projects[][position]" value="${newPosition}" class="position-input">
          <input type="hidden" name="projects[][id]" value="" class="id-input">
          <div class="flex-1">
            <label class="block text-xs font-medium text-base-content mb-1">Project Name</label>
            <input type="text" name="projects[][name]" value="" placeholder="E-commerce Platform"
                   class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
          </div>
          <div class="flex-1">
            <label class="block text-xs font-medium text-base-content mb-1">Link</label>
            <input type="text" name="projects[][link]" value="" placeholder="https://github.com/username/project"
                   class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
          </div>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-3">
          <div>
            <label class="block text-xs font-medium text-base-content mb-1">Start Date</label>
            <input type="date" name="projects[][start_date]" value=""
                   class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
          </div>
          <div>
            <label class="block text-xs font-medium text-base-content mb-1">End Date</label>
            <input type="date" name="projects[][end_date]" value=""
                   class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
          </div>
          <div>
            <label class="block text-xs font-medium text-base-content mb-1">Link Title</label>
            <input type="text" name="projects[][link_title]" value="" placeholder="GitHub Repository"
                   class="w-full px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
          </div>
        </div>
        <div class="mb-3">
          <button type="button" class="remove-project-button w-full py-2 btn btn-error rounded-md transition-colors duration-200 flex items-center justify-center">
            <i class="fas fa-trash mr-2"></i> Remove Project
          </button>
        </div>
        <div class="mb-3">
          <label class="block text-xs font-medium text-base-content mb-2">Project Details/Bullets</label>
          <div class="space-y-2 bullets-container">
            <button type="button" class="add-bullet-button text-primary hover:text-primary/80 text-sm font-medium flex items-center">
              <i class="fas fa-plus mr-1"></i> Add Bullet Point
            </button>
          </div>
        </div>
      `;

      newRow.style.opacity = '0';
      newRow.style.transform = 'translateY(-10px)';
      container.appendChild(newRow);

      requestAnimationFrame(() => {
        newRow.style.transition = 'all 0.3s ease-out';
        newRow.style.opacity = '1';
        newRow.style.transform = 'translateY(0)';
      });

      this.updatePositions();
      this.initBulletDragAndDrop(newRow);
    },

    removeItem(event) {
      const button = event.target.closest('.remove-project-button');
      const row = button.closest('.project-row');

      if (row && container.children.length > 1) {
        row.style.transition = 'all 0.3s ease-out';
        row.style.opacity = '0';
        row.style.transform = 'translateX(-20px)';

        setTimeout(() => {
          row.remove();
          this.updatePositions();
        }, 300);
      } else if (container.children.length <= 1) {
        alert("Cannot remove the last project entry.");
      }
    },

    addBullet(event) {
      const button = event.target.closest('.add-bullet-button');
      const bulletsContainer = button.closest('.bullets-container');
      const bulletRows = bulletsContainer.querySelectorAll('.bullet-row');
      const newIndex = bulletRows.length;

      const newBullet = document.createElement('div');
      newBullet.className = 'bullet-row flex items-center space-x-2';
      newBullet.dataset.bulletPosition = newIndex + 1;
      newBullet.innerHTML = `
        <div class="bullet-drag-handle cursor-grab active:cursor-grabbing text-base-content/50 hover:text-base-content p-1 rounded hover:bg-base-200">
          <i class="fas fa-grip-horizontal text-sm"></i>
        </div>
        <input type="hidden" name="projects[][bullets][][position]" value="${newIndex + 1}" class="bullet-position-input">
        <input type="hidden" name="projects[][bullets][][id]" value="" class="bullet-id-input">
        <input type="text" name="projects[][bullets][][content]" value="" placeholder="Built responsive UI with React..."
               class="flex-1 px-3 py-2 text-sm border border-base-300 rounded-md focus:outline-none focus:ring-1 focus:ring-primary focus:border-transparent bg-base-100 text-base-content">
        <button type="button" class="remove-bullet-button text-error hover:text-error/80 p-2">
          <i class="fas fa-times"></i>
        </button>
      `;

      // Insert before the add button
      bulletsContainer.insertBefore(newBullet, button);
      this.updateBulletPositions(bulletsContainer);
    },

    removeBullet(event) {
      const button = event.target.closest('.remove-bullet-button');
      const bulletRow = button.closest('.bullet-row');
      const bulletsContainer = bulletRow.closest('.bullets-container');
      
      bulletRow.remove();
      this.updateBulletPositions(bulletsContainer);
    },

    updateBulletPositions(bulletsContainer) {
      const bullets = bulletsContainer.querySelectorAll('.bullet-row');
      
      bullets.forEach((bullet, index) => {
        bullet.dataset.bulletPosition = index + 1;
        
        const positionInput = bullet.querySelector('.bullet-position-input');
        if (positionInput) {
          positionInput.value = index + 1;
        }
      });
    },

    updatePositions() {
      const rows = container.querySelectorAll('.project-row');
      rows.forEach((row, index) => {
        const position = index + 1;
        row.dataset.position = position;
        
        const positionInput = row.querySelector('.position-input');
        if (positionInput) {
          positionInput.value = position;
        }
        
        // Update bullet positions for this row
        const bulletsContainer = row.querySelector('.bullets-container');
        if (bulletsContainer) {
          this.updateBulletPositions(bulletsContainer);
        }
      });
    },

    initDragAndDrop() {
      let draggedElement = null;
      let placeholder = null;

      const createPlaceholder = () => {
        const div = document.createElement('div');
        div.className = 'placeholder bg-primary/10 border-2 border-dashed border-primary rounded-lg p-4 opacity-50';
        div.innerHTML = '<div class="text-center text-primary font-medium">Drop here</div>';
        return div;
      };

      container.addEventListener('mousedown', (e) => {
        const handle = e.target.closest('.drag-handle');
        if (!handle) return;

        draggedElement = handle.closest('.project-row');
        placeholder = createPlaceholder();

        draggedElement.classList.add('opacity-50', 'transform', 'rotate-2', 'scale-105', 'z-10');
        draggedElement.style.pointerEvents = 'none';
        document.body.style.cursor = 'grabbing';

        e.preventDefault();
      });

      document.addEventListener('mouseup', () => {
        if (!draggedElement) return;

        if (placeholder && placeholder.parentNode) {
          placeholder.parentNode.insertBefore(draggedElement, placeholder);
          placeholder.remove();
        }

        draggedElement.classList.remove('opacity-50', 'transform', 'rotate-2', 'scale-105', 'z-10');
        draggedElement.style.pointerEvents = '';
        document.body.style.cursor = '';

        this.updatePositions();

        draggedElement = null;
        placeholder = null;
      });

      container.addEventListener('mousemove', (e) => {
        if (!draggedElement) return;

        const targetRow = e.target.closest('.project-row');
        if (!targetRow || targetRow === draggedElement) return;

        const rect = targetRow.getBoundingClientRect();
        const midY = rect.top + rect.height / 2;

        if (placeholder && placeholder.parentNode) {
          placeholder.remove();
        }

        if (e.clientY < midY) {
          targetRow.parentNode.insertBefore(placeholder, targetRow);
        } else {
          targetRow.parentNode.insertBefore(placeholder, targetRow.nextSibling);
        }
      });
    },

    initBulletDragAndDrop(projectRow) {
      const bulletsContainer = projectRow.querySelector('.bullets-container');
      if (!bulletsContainer) return;

      let draggedBullet = null;
      let bulletPlaceholder = null;

      const createBulletPlaceholder = () => {
        const div = document.createElement('div');
        div.className = 'bullet-placeholder bg-primary/5 border border-dashed border-primary rounded my-1 h-10';
        return div;
      };

      bulletsContainer.addEventListener('mousedown', (e) => {
        const handle = e.target.closest('.bullet-drag-handle');
        if (!handle) return;

        draggedBullet = handle.closest('.bullet-row');
        bulletPlaceholder = createBulletPlaceholder();

        draggedBullet.classList.add('opacity-50');
        document.body.style.cursor = 'grabbing';

        e.preventDefault();
      });

      document.addEventListener('mouseup', () => {
        if (!draggedBullet) return;

        if (bulletPlaceholder && bulletPlaceholder.parentNode) {
          bulletPlaceholder.parentNode.insertBefore(draggedBullet, bulletPlaceholder);
          bulletPlaceholder.remove();
        }

        draggedBullet.classList.remove('opacity-50');
        document.body.style.cursor = '';

        this.updateBulletPositions(bulletsContainer);

        draggedBullet = null;
        bulletPlaceholder = null;
      });

      bulletsContainer.addEventListener('mousemove', (e) => {
        if (!draggedBullet) return;

        const targetBullet = e.target.closest('.bullet-row');
        if (!targetBullet || targetBullet === draggedBullet) return;

        const rect = targetBullet.getBoundingClientRect();
        const midY = rect.top + rect.height / 2;

        if (bulletPlaceholder && bulletPlaceholder.parentNode) {
          bulletPlaceholder.remove();
        }

        if (e.clientY < midY) {
          targetBullet.parentNode.insertBefore(bulletPlaceholder, targetBullet);
        } else {
          targetBullet.parentNode.insertBefore(bulletPlaceholder, targetBullet.nextSibling);
        }
      });
    }
  };

  addButton.addEventListener('click', () => ProjectsEdit.addItem());

  container.addEventListener('click', function(event) {
    if (event.target.closest('.remove-project-button')) {
      ProjectsEdit.removeItem(event);
    } else if (event.target.closest('.add-bullet-button')) {
      ProjectsEdit.addBullet(event);
    } else if (event.target.closest('.remove-bullet-button')) {
      ProjectsEdit.removeBullet(event);
    }
  });

  // Add bullet functionality to existing items
  document.querySelectorAll('.add-bullet-button').forEach(button => {
    button.addEventListener('click', function(event) {
      ProjectsEdit.addBullet(event);
    });
  });

  document.querySelectorAll('.remove-bullet-button').forEach(button => {
    button.addEventListener('click', function(event) {
      ProjectsEdit.removeBullet(event);
    });
  });

  // Initialize drag and drop for existing bullet points
  document.querySelectorAll('.project-row').forEach(row => {
    ProjectsEdit.initBulletDragAndDrop(row);
  });

  ProjectsEdit.initDragAndDrop();
});
</script>
