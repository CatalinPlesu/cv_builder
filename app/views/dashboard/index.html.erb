<div class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Quick Stats Sidebar -->
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8 mb-8">
      <div class="bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl p-6 shadow-lg border border-blue-100">
        <div class="flex items-center justify-between mb-2">
          <h3 class="text-lg font-semibold text-blue-800">Master CV Stats</h3>
          <div class="w-12 h-12 bg-blue-200 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-blue-700" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
        </div>
        <div class="space-y-3">
          <div class="flex justify-between"> <span class="text-gray-600">Total Educations</span>
            <span class="font-bold text-blue-700"><%= current_user.educations.count %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Total Projects</span>
            <span class="font-bold text-blue-700"><%= current_user.projects.count %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Total Experiences</span>
            <span class="font-bold text-blue-700"><%= current_user.experiences.count %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Skill Categories</span>
            <span class="font-bold text-blue-700"><%= current_user.skill_categories.count %></span>
          </div>
          <div class="flex justify-between">
            <span class="text-gray-600">Total Skills</span>
            <span class="font-bold text-blue-700"><%= current_user.skill_categories.joins(:skills).count %></span>
          </div>
        </div>
      </div>
      
      <%= render 'info_carousel' %>
      
      <!-- Master CV section - restored to span 2 columns -->
      <div class="bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl p-6 shadow-lg border border-purple-100 lg:col-span-2">
        <div class="flex items-center justify-between mb-2">
          <h3 class="text-lg font-semibold text-purple-800">Master CV</h3>
          <div class="w-12 h-12 bg-purple-200 rounded-full flex items-center justify-center">
            <svg class="w-6 h-6 text-purple-700" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
        <p class="text-gray-600 mb-4">Your complete professional profile with all skills, experiences, projects, and education and more.</p>
        <%= link_to master_cv_index_path, class: "inline-flex items-center px-5 py-2.5 bg-purple-600 text-white rounded-lg font-medium hover:bg-purple-700 transition-all duration-300 transform hover:-translate-y-1 shadow-md" do %>
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          Open Master CV
        <% end %>

        <%= link_to new_import_cv_data_path, 
            class: 'inline-flex items-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500' do %>
          <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
          </svg>
          Manage Data
        <% end %>
      </div>
    </div>
    
    <%= render 'templates_section' %>

  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.getElementById('infoCarousel');
  if (!carousel) return;

  const itemsContainer = document.getElementById('carouselItems');
  const indicatorsContainer = document.getElementById('carouselIndicators');
  const prevButton = document.getElementById('carouselPrev');
  const nextButton = document.getElementById('carouselNext');
  let items = [];
  let dots = [];
  let currentIndex = 0;
  let intervalId;
  const intervalTime = 12000; // 12 seconds

  function initCarousel() {
    if (itemsContainer) {
      items = itemsContainer.querySelectorAll('.carousel-item');
    }

    if (items.length <= 1) return;

    items.forEach((item, index) => {
      const dot = document.createElement('span');
      dot.classList.add('carousel-dot', 'w-3', 'h-3', 'rounded-full', 'cursor-pointer', 'transition-colors');
      if (index === 0) {
        dot.classList.add('bg-amber-600');
      } else {
        dot.classList.add('bg-amber-300');
      }
      dot.setAttribute('data-index', index);
      dot.addEventListener('click', () => goToSlide(index));
      indicatorsContainer.appendChild(dot);
      dots.push(dot);
    });

    // Add event listeners for arrows
    if (prevButton) {
        prevButton.addEventListener('click', () => {
            prevSlide();
            resetAutoPlay(); // Reset timer on interaction
        });
    }
    if (nextButton) {
        nextButton.addEventListener('click', () => {
            nextSlide();
            resetAutoPlay(); // Reset timer on interaction
        });
    }

    startAutoPlay();
  }

  function showSlide(index) {
    if (index < 0 || index >= items.length || items.length === 0) return;

    items.forEach(item => item.classList.add('hidden'));
    items[index].classList.remove('hidden');

    dots.forEach((dot, i) => {
      if (i === index) {
        dot.classList.remove('bg-amber-300');
        dot.classList.add('bg-amber-600');
      } else {
        dot.classList.remove('bg-amber-600');
        dot.classList.add('bg-amber-300');
      }
    });

    currentIndex = index;
  }

  function nextSlide() {
    const nextIndex = (currentIndex + 1) % items.length;
    showSlide(nextIndex);
  }

  function prevSlide() {
    // Handle wrap-around for previous slide
    const prevIndex = (currentIndex - 1 + items.length) % items.length;
    showSlide(prevIndex);
  }

  function goToSlide(index) {
    if (index !== currentIndex) {
      showSlide(index);
      resetAutoPlay();
    }
  }

  function startAutoPlay() {
    intervalId = setInterval(nextSlide, intervalTime);
  }

  function stopAutoPlay() {
    if (intervalId) {
      clearInterval(intervalId);
      intervalId = null;
    }
  }

  function resetAutoPlay() {
    stopAutoPlay();
    startAutoPlay();
  }

  // Pause on hover
  if (carousel) {
     carousel.addEventListener('mouseenter', stopAutoPlay);
     carousel.addEventListener('mouseleave', startAutoPlay);
  }

  initCarousel();
});
</script>
